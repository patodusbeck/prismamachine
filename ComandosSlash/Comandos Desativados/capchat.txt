const Discord = require('discord.js');

module.exports = {
    name: "captcha",
    description: "Defina o sistema de verificações",
    type: Discord.ApplicationCommandType.ChatInput,
    options: [
        {
            name: "canal",
            description: "Canal na qual localiza-se o painel.",
            type: Discord.ApplicationCommandOptionType.Channel,
            required: true,
        },
    ],


    run: async (client, interaction) => {
        if (!interaction.member.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return interaction.reply({ content: "Você não possui permissão de utilizar este comando.", ephemeral: true });
        let Canal = interaction.options.getChannel('canal');
        let Embed = new Discord.EmbedBuilder().setColor("#DDEADD").setImage('https://i.imgur.com/IZlqJFd.png');
        let Button = new Discord.ActionRowBuilder().addComponents(
            new Discord.ButtonBuilder()
                .setCustomId('Start')
                .setLabel('Iniciar captcha')
                .setStyle(Discord.ButtonStyle.Success)
        );

        Canal.send({ embeds: [Embed], components: [Button] }).catch(() => {
            return interaction.reply({ content: "Ocorreu um erro ao executar este comando.", ephemeral: true });
        });

        await interaction.reply({ content: "Painel enviado com sucesso!", ephemeral: true });
    }
};

//------------------------------------------------------------------------------------------------------------------

const Canvas = require('canvas');
const String = require('randomstring');


client.on("interactionCreate", async interaction => {
    if (interaction.isButton) {
        if (interaction.customId === 'Start') {
            const Captcha_Value = String.generate(5);
            let Vez = 6;

            async function Captcha() {
                const Imagem = Canvas.createCanvas(480, 240);
                const Contexto = Imagem.getContext('2d');

                Contexto.beginPath();
                Contexto.fillStyle = '#52566A';
                Contexto.fillRect(0, 0, Imagem.width, Imagem.height);
                Contexto.closePath();

                Contexto.fillStyle = '#EEEEEE';
                Contexto.font = "50px sans-serif";
                Contexto.textAlign = 'center';
                Contexto.fillText(Captcha_Value, 240, 130);
                return Imagem;
            };

            let Imagem = await Captcha();

            let Menu = new Discord.ActionRowBuilder().addComponents(
                new Discord.StringSelectMenuBuilder().setCustomId('Captcha').setPlaceholder('Iniciar Verificação.').setDisabled(false)
            );

            while (Vez > 0) {
                Menu.components[0].addOptions(
                    {
                        label: `${String.generate(5)}`,
                        value: `${String.generate(5)}`
                    }
                );
                Vez--
            };

            const Correto = Math.floor(Math.random() * 6);
            Menu.components[0].options[Correto].data.label = Captcha_Value, Menu.components[0].options[Correto].data.value = "Correto";

            return interaction.reply({ files: [Imagem.toBuffer()], components: [Menu], ephemeral: true });
        };
    };

    if (interaction.isStringSelectMenu()) {
        let Selecionado = interaction.values[0];
        if (interaction.customId === 'Captcha') {
            interaction.message.components[0].components[0].data.disabled = true;
            interaction.update({ components: [interaction.message.components[0]], ephemeral: true });
            setTimeout(() => { interaction.deleteReply(); }, 5000);

            if (Selecionado === 'Correto') {
               return interaction.member.roles.add(config.cargo)
            } else return interaction.user.send({ content: "Você selecionou a opção incorreta, tente novamente.", ephemeral: true });
        };
    };
});
