const Discord = require('discord.js');


module.exports = {
  
    name: "ban2",
    description: "banir um usuario",
    options:[
        {
            name:"user",
            description:"Selecione um usuario",
            type: Discord.ApplicationCommandOptionType.User,
            require: true,
        },
        {
            name:"motivo",
            description:"Escolhar um motivo para punir o usuario",
            type: Discord.ApplicationCommandOptionType.String,
            require: false,
        }

    ],
  
  permissions: null,
  owner: false,

  run: async (client, interaction, args) => {

    const sleep = async (ms) => await new Promise(r => setTimeout(r, ms));

    let membro = interaction.options.getUser("user")
    let userban = interaction.guild.members.cache.get(membro.id);

    let motivo = interaction.options.getString("motivo")

    if (!motivo) motivo = "Nenhum motivo inserido.";

    if (!interaction.member.permissions.has(Discord.PermissionsBitField.Flags.BanMembers)) {
        return await interaction.reply({ content: `${interaction.user}, você precisa da permissão de **BANIR** para executar esta função.`, ephemeral: true });
    } else if (!interaction.guild.members.cache.get(client.user.id).permissions.has(Discord.PermissionsBitField.Flags.BanMembers)) return interaction.reply({ content: `${interaction.user}, eu preciso da permissão de **BANIR** para executar esta função.`, ephemeral: true });

 if (!membro) return interaction.reply({ content: `${interaction.user}, você precisa informar um usuário que você deseja banir.`, ephemeral: true});

 if (!interaction.guild.members.cache.get(membro.id)) return interaction.reply({ content: `${interaction.user}, este usuário não está no servidor.`, ephemeral: true });

 if (membro.id == interaction.user.id) return interaction.reply({ content: `${interaction.user}, você não pode se banir!`, ephemeral: true });

    if (!interaction.member.permissions.has(Discord.PermissionsBitField.Flags.BanMembers)) {
        return await interaction.reply({ content: `${interaction.user}, você precisa da permissão de **BANIR** para executar esta função.`, ephemeral: true });
    } else if (!interaction.guild.members.cache.get(client.user.id).permissions.has(Discord.PermissionsBitField.Flags.BanMembers)) return interaction.reply({ content: `${interaction.user}, eu preciso da permissão de **BANIR** para executar esta função.`, ephemeral: true });

    const row = new Discord.ActionRowBuilder().addComponents(
        new Discord.ButtonBuilder()
          .setLabel("Banir")
          .setCustomId(`aceitar`)
          .setStyle(3),
        new Discord.ButtonBuilder()
          .setLabel("Recusar")
          .setCustomId(`recusar`)
          .setStyle(4))

    let msgban = new Discord.EmbedBuilder()
    .setAuthor({ name: `Confirmação de Banimento`,iconURL: interaction.guild.iconURL({ dynamic: true }) })
    .setThumbnail(interaction.user.displayAvatarURL({ dynamic: true, format: "png", size: 4096 }))
    .addFields(
        {
            name: `Moderador:`,
            value: `⠀Tag: \`${interaction.user.tag}\`\n⠀ID: \`${interaction.user.id}\``,
            inline: false
        },
        {
            name: `Usuário:`,
            value: `⠀Tag: \`${membro.discriminator}\`\n⠀ID: \`${membro.id}\``,
            inline: false
        }, 
        {
            name: `Motivo:`,
            value: `⠀${motivo}`,
            inline: false
        })


   interaction.reply({
        embeds: [msgban],
        components: [row],
      });

      const filter2 = (usuario) => !usuario.user.bot;

      const collector =  interaction.channel.createMessageComponentCollector({ filter: filter2 });

      
    collector.on('collect', async (b) => {

        if (b.customId == "aceitar") {
            interaction.deleteReply()
         
            let sucess = new Discord.EmbedBuilder()
            .setAuthor({ name: `Sistema de Banimentos`, iconURL:  membro.avatarURL({ format: 'png', dynamic: true, size: 2048 }) })
            .setThumbnail(interaction.user.displayAvatarURL({ dynamic: true, format: "png", size: 4096 }))
            .setTimestamp()
            .addFields(
                {
                    name: `Usuário Banido:`,
                    value: `⠀Tag: \`${membro.tag}\`\n⠀ID: \`${membro.id}\``,
                    inline: false
                },
                {
                    name: `Autor do banimento:`,
                    value: `⠀Tag: \`${interaction.user.tag}\`\n⠀ID: \`${interaction.user.id}\``,
                    inline: false
                },
                {
                    name: `Motivo:`,
                    value: `⠀${motivo}`,
                    inline: false
                })

                await b.reply({ embeds: [sucess]}).then(async (msg) => {
                    await userban.ban({ motivo: `Autor: ${interaction.user.tag} | Motivo: ${motivo}` })}).then(async (interaction) => { await sleep(50000); interaction.deleteReply(); });
        }

        if (b.customId == "recusar") {

            let recusar = new Discord.EmbedBuilder()
            .setAuthor({ name: `Confirmação de Banimento`, iconURL: `${client.user.displayAvatarURL({ display: true, size: 4096 })}` })
            .setThumbnail(interaction.user.displayAvatarURL({ dynamic: true, format: "png", size: 4096 }))
            .setDescription(`O banimento foi cancelado por: \`${membro.user.tag}\`\n⠀ID: \`${membro.id}\``)

            interaction.edit({embeds: [recusar]}).then(async (interaction) => { await sleep(20000); interaction.delete(); });


        }

    })
}
}

/// Créditos: // Lucass#8096